<?php
/*   _______________________________________
    |  Dikembangkan oleh - Raden Parhanudin |
    |    Whatsapp: https://6282342788059    |
    |_______________________________________|
*/
 namespace App\Traits; use Illuminate\Support\Facades\Http; use Modules\DataReferensi\Entities\Jft; use Modules\DataReferensi\Entities\Jfu; use Modules\DataReferensi\Entities\Kpkn; use Modules\DataReferensi\Entities\Lokasi; use Modules\DataReferensi\Entities\Pendidikan; use Modules\DataReferensi\Entities\UnitOrganisasi; use Modules\ProfileASN\Entities\Asn; trait UpdateReferensi { use SIASNGateway; public function updateTempatLahir() { $ids = Asn::doesntHave("\x74\x65\x6d\x70\x61\x74\x5f\x6c\x61\x68\x69\162")->select("\x74\145\x6d\x70\x61\164\x5f\x6c\x61\150\151\x72\x5f\151\144")->groupBy("\164\145\x6d\160\141\164\x5f\154\141\x68\x69\162\x5f\151\144")->get()->pluck("\x74\x65\x6d\x70\141\164\x5f\154\141\x68\x69\x72\137\x69\144"); foreach ($ids as $id) { goto T3QYy; rynRJ: if (!isset($response["\162\145\x73\x75\154\x74\163"])) { return $this->sendResponse(false, $response["\155\x65\163\x73\141\147\x65"]); } goto bxyyR; y0Umr: $response = $this->getRequest("\x73\151\141\x73\156\x2d\x69\156\x73\164\x61\x6e\163\x69\x2f\x72\x65\x66\145\162\x65\x6e\163\x69\57\154\x6f\153\141\x73\x69\77{$query}"); goto rynRJ; T3QYy: $query = http_build_query(["\151\x64" => $id]); goto y0Umr; bxyyR: foreach ($response["\162\145\163\165\154\x74\x73"] as $data) { Lokasi::updateOrCreate(["\151\x64" => $data["\x69\144"]], $data); } goto vVveY; vVveY: } } public function updateLokasiKerja() { $ids = Asn::doesntHave("\x6c\157\x6b\x61\x73\151\x5f\x6b\x65\x72\x6a\141")->select("\154\157\x6b\x61\x73\x69\137\x6b\x65\162\152\x61\137\x69\x64")->groupBy("\154\x6f\x6b\x61\163\151\137\153\145\162\152\141\137\x69\144")->get()->pluck("\154\157\153\141\163\151\x5f\x6b\145\x72\x6a\141\137\151\144"); foreach ($ids as $id) { goto tEU2L; tEU2L: $query = http_build_query(["\151\144" => $id]); goto XHu_G; rF5Ry: if (!isset($response["\162\x65\163\165\x6c\164\x73"])) { return $this->sendResponse(false, $response["\x6d\145\x73\x73\141\147\145"]); } goto hKJeM; hKJeM: foreach ($response["\162\145\163\x75\154\164\163"] as $data) { Lokasi::updateOrCreate(["\151\x64" => $data["\x69\x64"]], $data); } goto Xr083; XHu_G: $response = $this->getRequest("\163\151\x61\x73\x6e\x2d\x69\156\163\164\x61\156\x73\x69\x2f\162\x65\x66\x65\x72\145\156\x73\x69\x2f\154\157\x6b\x61\x73\151\x3f{$query}"); goto rF5Ry; Xr083: } } public function updateJft() { $ids = Asn::doesntHave("\x6a\146\164")->where("\x6a\145\156\151\163\137\152\141\142\141\164\x61\156\137\x69\x64", 2)->select("\x6a\146\x74\137\151\x64")->groupBy("\x6a\x66\164\x5f\151\144")->get()->pluck("\x6a\x66\x74\x5f\151\144"); foreach ($ids as $id) { goto l3S6e; BLSFB: foreach ($response["\162\x65\x73\x75\154\x74\163"] as $data) { Jft::updateOrCreate(["\151\144" => $data["\x69\144"]], $data); } goto aXM66; pR3hE: $response = $this->getRequest("\x73\151\x61\163\x6e\55\x69\156\x73\164\141\156\163\x69\x2f\162\145\x66\x65\162\x65\x6e\x73\x69\57\152\x66\164\x3f{$query}"); goto HY6BW; l3S6e: $query = http_build_query(["\x69\x64" => $id]); goto pR3hE; HY6BW: if (!isset($response["\x72\145\163\x75\154\164\163"])) { return $this->sendResponse(false, $response["\x6d\145\x73\163\141\x67\x65"]); } goto BLSFB; aXM66: } } public function updateJfu() { $ids = Asn::doesntHave("\x6a\146\165")->where("\x6a\145\x6e\x69\x73\137\x6a\x61\142\x61\164\141\156\137\151\x64", 4)->select("\x6a\146\165\137\151\144")->groupBy("\x6a\x66\165\137\x69\144")->get()->pluck("\x6a\x66\165\137\x69\x64"); foreach ($ids as $id) { goto Nga3U; Z2Clg: $response = $this->getRequest("\163\x69\x61\x73\x6e\55\x69\156\x73\x74\141\x6e\163\151\57\x72\x65\x66\145\x72\145\x6e\163\151\x2f\152\146\x75\77{$query}"); goto qokbT; Nga3U: $query = http_build_query(["\151\144" => $id]); goto Z2Clg; MUvQe: foreach ($response["\162\145\163\x75\154\x74\x73"] as $data) { Jfu::updateOrCreate(["\151\144" => $data["\x69\x64"]], $data); } goto aq2Df; qokbT: if (!isset($response["\x72\x65\163\x75\x6c\x74\x73"])) { return $this->sendResponse(false, $response["\155\145\x73\x73\x61\147\x65"]); } goto MUvQe; aq2Df: } } public function updatePendidikan() { $ids = Asn::doesntHave("\160\x65\x6e\x64\151\144\x69\153\x61\156")->where("\160\x65\156\x64\x69\144\x69\153\x61\x6e\137\151\x64", "\x3c\76", '')->select("\x70\145\156\x64\x69\144\x69\153\141\x6e\137\x69\144")->groupBy("\160\145\x6e\x64\x69\144\x69\x6b\x61\x6e\137\x69\144")->get()->pluck("\x70\x65\x6e\x64\x69\144\151\x6b\x61\x6e\x5f\x69\144"); foreach ($ids as $id) { goto alfKx; w29Iy: foreach ($response["\162\145\163\x75\x6c\164\x73"] as $data) { Pendidikan::updateOrCreate(["\x69\x64" => $data["\151\144"]], $data); } goto EYvhJ; xKU0l: $response = $this->getRequest("\x73\x69\141\x73\156\x2d\x69\x6e\163\164\141\x6e\163\151\x2f\162\145\146\145\162\145\x6e\x73\x69\x2f\x70\x65\x6e\x64\x69\x64\151\153\141\156\77{$query}"); goto cNgpL; cNgpL: if (!isset($response["\162\x65\x73\x75\x6c\x74\163"])) { return $this->sendResponse(false, $response["\x6d\x65\163\163\x61\x67\x65"]); } goto w29Iy; alfKx: $query = http_build_query(["\151\144" => $id]); goto xKU0l; EYvhJ: } } public function updateKpkn() { $ids = Asn::doesntHave("\x6b\x70\x6b\156")->where("\x6b\x70\153\x6e\x5f\x69\x64", "\x3c\76", '')->select("\x6b\x70\x6b\x6e\137\151\x64")->groupBy("\x6b\160\x6b\x6e\x5f\151\144")->get()->pluck("\153\160\x6b\156\x5f\x69\144"); foreach ($ids as $id) { goto OBNOs; OBNOs: $query = http_build_query(["\151\144" => $id]); goto efqEJ; efqEJ: $response = $this->getRequest("\x73\151\141\163\156\55\x69\156\163\164\x61\x6e\x73\151\x2f\162\145\x66\x65\x72\x65\156\163\151\x2f\153\x70\x6b\x6e\77{$query}"); goto SG_fb; QkdaL: foreach ($response["\x72\x65\x73\x75\x6c\164\x73"] as $data) { Kpkn::updateOrCreate(["\151\144" => $data["\151\x64"]], $data); } goto RVV1A; SG_fb: if (!isset($response["\162\x65\x73\x75\x6c\164\163"])) { return $this->sendResponse(false, $response["\155\x65\x73\x73\x61\x67\145"]); } goto QkdaL; RVV1A: } } public function updateUnitOrganisasi() { $ids = Asn::doesntHave("\x75\156\151\164\137\157\162\147\141\x6e\151\x73\x61\x73\x69")->where("\x75\x6e\x69\164\137\x6f\162\x67\x61\x6e\151\x73\141\163\151\137\x69\144", "\x3c\x3e", '')->select("\x75\x6e\x69\164\x5f\157\162\147\x61\x6e\151\x73\x61\163\x69\x5f\151\x64")->groupBy("\165\156\151\164\137\x6f\162\147\141\x6e\x69\163\141\163\151\x5f\151\144")->get()->pluck("\165\156\x69\164\137\x6f\162\147\141\156\x69\x73\141\x73\x69\137\x69\144"); foreach ($ids as $id) { goto fsdOf; fsdOf: $query = http_build_query(["\x69\x64" => $id]); goto saUBs; saUBs: $response = $this->getRequest("\163\151\141\163\156\x2d\x69\156\163\x74\x61\x6e\x73\x69\57\x72\145\146\145\162\145\x6e\x73\151\57\165\x6e\151\x74\55\x6f\x72\147\x61\x6e\151\163\141\163\x69\x3f{$query}"); goto Oy3De; NNRkw: foreach ($response["\x72\145\x73\x75\x6c\x74\163"] as $data) { UnitOrganisasi::updateOrCreate(["\x69\144" => $data["\x69\x64"]], $data); } goto F1sdQ; Oy3De: if (!isset($response["\162\x65\163\x75\x6c\164\x73"])) { return $this->sendResponse(false, $response["\x6d\145\x73\x73\141\147\145"]); } goto NNRkw; F1sdQ: } } }
