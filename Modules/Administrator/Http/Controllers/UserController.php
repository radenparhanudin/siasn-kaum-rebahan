<?php
/*   _______________________________________
    |  Dikembangkan oleh - Raden Parhanudin |
    |    Whatsapp: https://6282342788059    |
    |_______________________________________|
*/
 namespace Modules\Administrator\Http\Controllers; use App\Http\Controllers\Controller; use App\Models\Role; use App\Models\User; use Illuminate\Database\Eloquent\Builder; use Illuminate\Http\Request; use Yajra\DataTables\Facades\DataTables; class UserController extends Controller { public function index() { $roles = Role::whereNotIn("\x6e\x61\x6d\145", ["\x61\144\155\151\x6e\x69\x73\x74\x72\141\x74\x6f\x72"])->orderBy("\x64\145\x73\143\x72\x69\x70\x74\x69\157\x6e")->get(); return view("\141\x64\x6d\x69\156\x69\x73\164\x72\141\164\x6f\162\x3a\x3a\165\x73\x65\162\x2e\151\x6e\x64\145\x78", compact("\162\x6f\154\145\163")); } public function edit(Request $request, $id) { if ($request->ajax()) { goto pDGCp; wlVcN: $roles = $data->roles()->pluck("\x69\144"); goto zLKs0; pDGCp: $data = User::with("\162\x6f\154\145\x73")->findOrFail($id); goto wlVcN; zLKs0: return $this->sendResponse(true, null, ["\x61\x63\x74\151\x6f\156" => route("\165\x73\x65\x72\x2e\x75\x70\144\x61\164\145", $data->id), "\x72\157\154\145\x73" => $roles]); goto HWcSc; HWcSc: } } public function update(Request $request, $id) { if ($request->ajax()) { goto R6bbJ; AQ8QX: $roles = Role::whereIn("\151\144", $request->roles)->get()->pluck("\x6e\x61\155\145"); goto sZEtv; R6bbJ: $data = User::findOrFail($id); goto AQ8QX; d__Ts: app()->make(\Spatie\Permission\PermissionRegistrar::class)->forgetCachedPermissions(); goto wuPfe; wuPfe: return $this->sendResponse(true, "\125\x70\x64\141\x74\x65\x20\162\157\154\x65\x73\40\x75\x73\x65\162\40\x62\145\x72\x68\x61\163\151\x6c"); goto hJKzE; sZEtv: $data->syncRoles($roles); goto d__Ts; hJKzE: } } public function datatable(Request $request) { if ($request->ajax()) { $data = User::with("\162\157\154\145\163")->whereHas("\162\157\x6c\x65\x73", function (Builder $query) { return $query->whereNotIn("\x6e\x61\155\145", ["\141\144\x6d\151\156\x69\x73\x74\x72\141\164\x6f\162"]); })->select("\x75\x73\145\x72\163\x2e\52"); return DataTables::eloquent($data)->addColumn("\162\157\x6c\145\x73", function ($data) { return $data->roles->map(function ($role) { return $role->description; })->implode("\74\x62\x72\76"); })->addColumn("\x61\143\164\151\x6f\156", function ($data) { return view("\143\157\155\160\157\156\x65\x6e\x74\163\x2e\x64\141\x74\141\164\x61\x62\x6c\145\x73\55\x61\x63\x74\151\157\x6e", ["\141\143\x74\151\157\x6e" => ["\145\144\x69\x74" => ["\x68\x72\145\x66" => route("\x75\x73\x65\x72\56\145\x64\x69\164", $data->id), "\x73\x68\157\167" => 1]]]); })->rawColumns(["\162\157\154\145\163"])->toJson(); } } }
