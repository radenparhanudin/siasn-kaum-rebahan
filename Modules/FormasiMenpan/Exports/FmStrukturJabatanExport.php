<?php
/*   _______________________________________
    |  Dikembangkan oleh - Raden Parhanudin |
    |    Whatsapp: https://6282342788059    |
    |_______________________________________|
*/
 namespace Modules\FormasiMenpan\Exports; use Maatwebsite\Excel\Concerns\FromCollection; use Maatwebsite\Excel\Concerns\ShouldAutoSize; use Maatwebsite\Excel\Concerns\WithHeadings; use Maatwebsite\Excel\Concerns\WithMapping; use Maatwebsite\Excel\Concerns\WithStyles; use PhpOffice\PhpSpreadsheet\Worksheet\Worksheet; use PhpOffice\PhpSpreadsheet\Cell\Cell; use PhpOffice\PhpSpreadsheet\Cell\DataType; use Maatwebsite\Excel\Concerns\WithCustomValueBinder; use Modules\FormasiMenpan\Entities\FmStrukturJabatan; use PhpOffice\PhpSpreadsheet\Cell\DefaultValueBinder; class FmStrukturJabatanExport extends DefaultValueBinder implements WithCustomValueBinder, FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithMapping { protected $id; public function __construct($id) { $this->id = $id; } public function collection() { goto s0KE3; wfnM3: return collect($struktur_jabatans->orderBy("\x6b\157\x64\x65")->get()); goto kMpnQ; s0KE3: $struktur_jabatans = FmStrukturJabatan::query(); goto AjvFn; AjvFn: if (!is_null($this->id)) { $parent = FmStrukturJabatan::find($this->id); $struktur_jabatans->where("\153\x6f\x64\145", "\x6c\151\x6b\145", $parent->kode . "\45"); } goto wfnM3; kMpnQ: } public function map($struktur_jabatans) : array { return ["\151\144" => $struktur_jabatans->id, "\153\x6f\x64\145" => $struktur_jabatans->kode, "\156\141\x6d\x61" => $struktur_jabatans->nama, "\x61\142\153" => $struktur_jabatans->abk, "\153\145\154\x61\x73" => $struktur_jabatans->kelas, "\160\157\x73\x69\x73\151\137\x69\x64" => $struktur_jabatans->posisi_id, "\162\x69\x69\154" => $struktur_jabatans->riil]; } public function headings() : array { return ["\x49\x44", "\x4b\x6f\x64\x65", "\x4e\x61\x6d\x61\x20\112\x61\142\141\164\141\156", "\101\x42\x4b", "\x4b\145\x6c\141\163", "\x50\157\163\x69\x73\x69\40\x49\x44", "\124\145\x72\x69\163\151\x20\101\x53\116"]; } public function styles(Worksheet $sheet) { return [1 => ["\x66\x6f\156\x74" => ["\142\x6f\x6c\144" => true]]]; } public function bindValue(Cell $cell, $value) { if (is_numeric($value)) { $cell->setValueExplicit($value, DataType::TYPE_STRING); return true; } return parent::bindValue($cell, $value); } }
